C51 COMPILER V9.53.0.0   UART                                                              05/26/2016 16:19:55 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.obj
COMPILER INVOKED BY: C:\Keil_MDK\C51\BIN\C51.EXE uart\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\delay;.\uart;.\NRF2
                    -4L01__Receiver;.\LED16_64;.\WifiESP8266;.\PCF8563;.\DS18B20) DEBUG OBJECTEXTEND PRINT(.\uart.lst) TABS(2) OBJECT(uart.ob
                    -j)

line level    source

   1          #include <reg52.h>
   2          #include "uart.h"
   3          
   4          
   5          //uart初始化函数
   6          void uart_init()
   7          {
   8   1          PS = 1;//设置较高优先级
   9   1        
  10   1          SCON = 0x50;   //设置串口工作方式
  11   1          TMOD |= 0x20;  //设置定时器一工作在八位自动重装方式
  12   1          TH1 = 0xfa;    //比特率为4800bit/s时的TH1中放置的初始值，开始时，自动赋给TL1
  13   1          TR1 = 1;       //允许中断
  14   1        
  15   1          EA = 1;         //总中断
  16   1          ES = 1;         //串口中断
  17   1      }
  18          
  19          //发送单个字节给PC
  20          void uart_sendbyte(unsigned char byte)
  21          {
  22   1          /*TI为发送中断，如果发送一个数据，则被置一，被置一后需要手动复位*/
  23   1          SBUF = byte;//将内容放到SBUF中，PC会接收
  24   1          while(!TI); //当TI = 0时，等待发送完成
  25   1          TI = 0;     //TI需要手动置零
  26   1      }
  27          
  28          //发送字符串到PC
  29          void uart_sendstr(unsigned char *s)
  30          {
  31   1          while(*s)
  32   1          {
  33   2              uart_sendbyte(*s);
  34   2              s ++;
  35   2          }
  36   1      }
  37          
  38          ////中断服务函数，用于软复位
  39          //void uart_isr() interrupt 4
  40          //{
  41          //    static unsigned char i = 0;
  42          //    unsigned char temp;
  43          //    ES = 0;
  44          //    temp = SBUF;
  45          //    if(0x7f == temp)
  46          //    {
  47          //        i ++;
  48          //        if(10 == i)
  49          //        {
  50          //            i = 0;
  51          //            ISP_CONTR = 0xe0;
  52          //        }
  53          //    }
C51 COMPILER V9.53.0.0   UART                                                              05/26/2016 16:19:55 PAGE 2   

  54          //    else
  55          //    {
  56          //        i = 0;
  57          //    }
  58          //    RI = 0;
  59          //    ES = 1;
  60          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     45    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
