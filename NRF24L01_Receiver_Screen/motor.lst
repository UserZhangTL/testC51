C51 COMPILER V9.53.0.0   MOTOR                                                             05/21/2016 10:40:02 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN motor.obj
COMPILER INVOKED BY: C:\Keil_MDK\C51\BIN\C51.EXE motor\motor.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\timer;.\delay;.\lcd;.\u
                    -art;.\NRF24L01__Receiver;.\tmp_hum;.\motor) DEBUG OBJECTEXTEND PRINT(.\motor.lst) TABS(2) OBJECT(motor.obj)

line level    source

   1          #include <reg52.h>
   2          #include "delay.h"
   3          #include "timer.h"
   4          
   5          // //直流电机位，J45上的DC2
   6          // sbit DC2 = P1^0;
   7          // bit startDC2_Flag = 0;
   8          // sbit Key1 = P2^2;
   9          // sbit Key2 = P2^1;
  10          
  11          // //步进电机位，J45上的abcd
  12          // sbit a = P2^7;
  13          // sbit b = P2^6;
  14          // sbit c = P2^5;
  15          // sbit d = P2^4;
  16          // //                          0001,0011,0010,0110,0100,1100,1000,1001
  17          // //                          1001,1000,1100,0100,0110,0010,0011,0001
  18          // unsigned char code Back[8]={0xf1,0xf3,0xf2,0xf6,0xf4,0xfc,0xf8,0xf9}; //反转
  19          // unsigned char code Forw[8]={0xf9,0xf8,0xfc,0xf4,0xf6,0xf2,0xf3,0xf1}; //正转
  20          
  21          // //控制直流电机，命令发来为1，开始转动，为0，停止转动
  22          // void control_DC2(unsigned char comd)
  23          // {
  24          //    if(comd == 1)
  25          //    {
  26          //        startDC2_Flag = 1;
  27          //    }
  28          //    else
  29          //    {
  30          //        startDC2_Flag = 0;
  31          //    }
  32          // }
  33          
  34          // //控制步进电机，0：正转，1：反转   需要一直摁着才能一直转动
  35          // void control_StepMotor(unsigned char comd)
  36          // {
  37          //    unsigned char i = 0;
  38          //    if(comd == 0)
  39          //    {
  40          //        for(i = 0;i < 8;i ++)
  41          //        {
  42          //            a = Back[i] & 0x01;
  43          //            b = Back[i] & 0x02;
  44          //            c = Back[i] & 0x04;
  45          //            d = Back[i] & 0x08;
  46          //            delay_ms(1);
  47          //        }
  48          //    }
  49          //    if(comd == 1)
  50          //    {
  51          //        for(i = 0;i < 8;i ++)
  52          //        {
  53          //            a = Forw[i] & 0x01;
  54          //            b = Forw[i] & 0x02;
C51 COMPILER V9.53.0.0   MOTOR                                                             05/21/2016 10:40:02 PAGE 2   

  55          //            c = Forw[i] & 0x04;
  56          //            d = Forw[i] & 0x08;
  57          //            delay_ms(1);
  58          //        }
  59          //    }
  60          // }
  61          
  62          //使用参考
  63          
  64          // void main()
  65          // {
  66          //    Timer1_Init();
  67          //    while(1)
  68          //    {
  69          //        if(Key1 == 0)
  70          //        {
  71          //            control_StepMotor(0);
  72          //        }
  73          //        if(Key2 == 0)
  74          //        {
  75          //            control_StepMotor(1);
  76          //        }
  77          //    }
  78          // }
  79          
  80          
  81          
  82          // void TImer1_Isr() interrupt 3
  83          // {
  84          //    static unsigned char timer1 = 0;
  85          //    TH1 = (65536 - 50) / 256;  //50us
  86          //    TL1 = (65536 - 50) % 256; 
  87          //    timer1 ++;
  88          //    if(timer1 == 100)
  89          //    {
  90          //        timer1 = 0;
  91          //    }
  92          //    if(startDC2_Flag == 1)
  93          //    {
  94          //        if(timer1 < 90)
  95          //        {
  96          //            DC2 = 1;
  97          //        }
  98          //        else
  99          //        {
 100          //            DC2 = 0;
 101          //        }
 102          //    }
 103          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
